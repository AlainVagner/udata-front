diff --git a/node_modules/@conciergerie.dev/select-a11y/dist/module.js b/node_modules/@conciergerie.dev/select-a11y/dist/module.js
index 9327527..ff0979f 100644
--- a/node_modules/@conciergerie.dev/select-a11y/dist/module.js
+++ b/node_modules/@conciergerie.dev/select-a11y/dist/module.js
@@ -72,6 +72,7 @@ class $5a3b80354f588438$var$Select {
         this._handleClear = this._handleClear.bind(this);
         this._handleReset = this._handleReset.bind(this);
         this._handleSuggestionClick = this._handleSuggestionClick.bind(this);
+        this._handleSuggestionKeyDown = this._handleSuggestionKeyDown.bind(this);
         this._positionCursor = this._positionCursor.bind(this);
         this._removeOption = this._removeOption.bind(this);
         this.setText = this.setText.bind(this);
@@ -122,6 +123,8 @@ class $5a3b80354f588438$var$Select {
         this.input.addEventListener('input', this._handleInput);
         this.input.addEventListener('focus', this._positionCursor, true);
         this.list.addEventListener('click', this._handleSuggestionClick);
+        this.list.addEventListener('keydown', this._handleSuggestionKeyDown);
+        this.list.addEventListener('keypress', this._handleSuggestionKeyDown);
         this.wrap.addEventListener('keydown', this._handleKeyboard);
         document.addEventListener('blur', this._handleFocus, true);
         if (this.el.form) this.el.form.addEventListener('reset', this._handleReset);
@@ -333,6 +336,36 @@ class $5a3b80354f588438$var$Select {
         const shouldClose = this.multiple && event.metaKey ? false : true;
         this._toggleSelection(optionIndex, shouldClose);
     }
+    _handleSuggestionKeyDown(event) {
+        /**
+         * Added method to transfer keydowns from suggestions to the search
+         */
+
+        if(this.input === undefined) {
+            console.log("Input not loaded");
+            return;
+        }
+
+        // From keypress
+        if(event.charCode) {
+            // Printable chars
+            this.input.value = this.input.value + String.fromCharCode(event.charCode) 
+            this._handleInput()
+        }
+
+        // From keydown
+        else if(event.keyCode === 8) {
+            // Backspace
+            if(this.input.value.length > 0) {
+                this.input.value = this.input.value.substring(0, this.input.value.length - 1)
+                this._handleInput()
+            }
+        } else if(event.keyCode == 32) {
+            // Space      
+            this.input.value = this.input.value + " "
+            this._handleInput()
+        }
+    }
     _handleInput() {
         // prevent event fireing on focus and blur
         if (this.search === this.input.value) return;
@@ -366,7 +399,7 @@ class $5a3b80354f588438$var$Select {
             this._moveIndex(-1);
             return;
         }
-        if (!this.multiple && event.keyCode === 13 || event.keyCode === 32) {
+        if (!this.multiple && event.keyCode === 13) {
             event.preventDefault();
             this._toggleSelection(parseInt(option.getAttribute('data-index'), 10), this.multiple ? false : true);
         }
